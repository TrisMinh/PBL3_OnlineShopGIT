@*
    Partial view for displaying product categories.
    Expects:
    - ViewBag.Categories: An IEnumerable<string> containing the category names.
    - ViewBag.SelectedCategory: A string containing the name of the currently selected category.
*@
@{
    // Default values if ViewBag is not set (optional, for safety)
    var categories = ViewBag.Categories as IEnumerable<string> ?? new List<string>();
    var selectedCategory = ViewBag.SelectedCategory as string;

    // Split categories into two rows for display (adjust logic if needed)
    int half = (int)Math.Ceiling(categories.Count() / 2.0);
    var firstRowCategories = categories.Take(half);
    var secondRowCategories = categories.Skip(half);
}
<div class="product-header-grid">
    <!-- Product Title -->
    <h1 class="product-title">
        Products
    </h1>

    <!-- Category Selector Bar -->
    <nav class="category-selector">
        <div class="category-row">
            <a asp-controller="Products" asp-action="Index" class="category-button @(string.IsNullOrEmpty(selectedCategory) ? "active" : "")">ALL</a>
            @foreach (var category in firstRowCategories)
            {
                <a asp-controller="Products" asp-action="Index" asp-route-category="@category"
                   class="category-button @(category == selectedCategory ? "active" : "")">
                    @(category == "Sales" ? "SALES" : category.ToUpper())
                </a>
            }
        </div>
        @if (secondRowCategories.Any())
        {
            <div class="category-row">
                @foreach (var category in secondRowCategories)
                {
                    <a asp-controller="Products" asp-action="Index" asp-route-category="@category"
                       class="category-button @(category == selectedCategory ? "active" : "")">
                        @(category == "Sales" ? "SALES" : category.ToUpper())
                    </a>
                }
            </div>
        }
    </nav>
</div>
