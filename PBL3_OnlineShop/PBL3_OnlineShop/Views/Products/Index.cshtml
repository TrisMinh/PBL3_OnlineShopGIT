@model IEnumerable<Products>
@{
    ViewData["Title"] = "Sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/Product.css">

<div class="app">
    <div class="container product-page-container">
        <main class="product-content">
            <div class="breadcrumbs">
                Home / Products
            </div>

            <div class="product-main">
                @if (!ViewData.ContainsKey("SelectedCollection"))
                {
                    @Html.Partial("_FilterPartial", null, new ViewDataDictionary(ViewData) { { "SelectedCollection", ViewBag.SelectedCollection } })
                }
                else
                {
                    @Html.Partial("_FilterPartial")
                }

                <section class="product-grid">
                    @Html.Partial("_CategoryPartial")

                    <div class="product-card-container">
                        @foreach (var product in Model)
                        {
                            var imageArr = (product.ImageUrl ?? "").Split(',', StringSplitOptions.RemoveEmptyEntries);
                            var imageUrl = imageArr.Length > 0 ? imageArr[0].Replace("~", "") : "";
                            var colors = product.ProductSizes?.Select(ps => ps.Color).Distinct().ToList() ?? new List<string>();
                            var sizes = product.ProductSizes?.Select(ps => ps.Size).Distinct().ToList() ?? new List<string>();

                            <div class="product-card">
                                <div class="product-image-container">
                                    <a href="/products/details/@product.ProductId">
                                        <img src="@imageUrl" alt="@product.ProductName" class="product-image">
                                    </a>
                                    @if (product.SalePercentage != null && product.SalePercentage > 0 && product.Status != null && (product.Status == "2" || product.Status.StartsWith("2,") || product.Status.EndsWith(",2") || product.Status.Contains(",2,")))
                                    {
                                        var salePercent = Math.Round((decimal)product.SalePercentage * 100, 0);
                                        <div class="product-sale-badge">-@salePercent%</div>
                                    }
                                </div>
                                <div class="product-info">
                                    <div class="product-options">
                                        <span>+@colors.Count Color</span>
                                        <span class="right">+@sizes.Count Size</span>
                                    </div>
                                    <div class="product-details">
                                        <span class="product-name">
                                            @(product.StockQuantity == 0 ? "Out Of Stock" : product.ProductName)
                                        </span>
                                        @if (product.StockQuantity == 0)
                                        {
                                            <!-- Không hiển thị giá tiền nếu hết hàng -->
                                        }
                                        else if (product.SalePercentage != null && product.SalePercentage > 0 && product.Status != null && (product.Status == "2" || product.Status.StartsWith("2,") || product.Status.EndsWith(",2") || product.Status.Contains(",2,")))
                                        {
                                            var newPrice = product.SellingPrice * (1 - product.SalePercentage);
                                            <div class="product-price-container">
                                                <span class="product-price">$@string.Format("{0:N0}", newPrice)</span>
                                                <span class="product-price-original">$@string.Format("{0:N0}", product.SellingPrice)</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="product-price">$@string.Format("{0:N0}", product.SellingPrice)</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <nav class="pagination">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <a href="?page=@(ViewBag.CurrentPage - 1)" class="page-link prev">&lt;</a>
                        }
                        @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
                        {
                            if (i == (int)ViewBag.CurrentPage)
                            {
                                <a href="?page=@i" class="page-link active">@i</a>
                            }
                            else
                            {
                                <a href="?page=@i" class="page-link">@i</a>
                            }
                        }
                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <a href="?page=@(ViewBag.CurrentPage + 1)" class="page-link next">&gt;</a>
                        }
                    </nav>
                </section>
            </div>
        </main>
    </div>
</div>

<script>
    // Giữ lại các filter khác khi search
    const searchForm = document.getElementById('searchForm');
    if (searchForm) {
        searchForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const url = new URL(window.location.href);
            const params = new URLSearchParams(url.search);
            // Lấy text search mới
            const text = document.getElementById('search-header').value;
            params.set('text', text);
            // Xóa tham số page khi search mới
            params.delete('page');
            // Tạo url mới giữ lại các filter khác
            window.location.href = '/Products?' + params.toString();
        });
    }
</script>
